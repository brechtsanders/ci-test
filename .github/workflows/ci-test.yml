name: GitHub-CI for ci-test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: ${{ matrix.sys.os }}-${{ matrix.compiler.cc }}
    strategy:
      matrix:
        sys:
          - {
              os: windows-latest,
              shell: 'msys2 {0}',
              cmake_generator: "MSYS Makefiles"
            }
          - {
              os: ubuntu-latest,
              shell: bash,
              cmake_generator: "Unix Makefiles"
            }
          - {
              os: macos-latest,
              shell: bash,
              cmake_generator: "Unix Makefiles"
            }
        compiler:
          - {
              cc: gcc,
              cxx: g++
            }
          - {
              cc: clang,
              cxx: clang++
            }
    runs-on: ${{ matrix.sys.os }}
    defaults:
      run:
        shell: ${{ matrix.sys.shell }}
    env:
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}

    steps:
    - uses: actions/checkout@v1
    - if: matrix.sys.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          git
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-ninja
    - name: Configure (CMake)
      run: |
        cmake -G"${{ matrix.sys.cmake_generator }}" -DCMAKE_CC_COMPILER=${{ matrix.config.cc }} -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }} -DCMAKE_INSTALL_PREFIX:PATH=../build_result -DBUILD_STATIC:BOOL=ON -DBUILD_SHARED:BOOL=ON -DBUILD_UTILS:BOOL=ON -DBUILD_DOCUMENTATION:BOOL=OFF -S. -Bbuild_temp
    - name: Build (make)
      run: |
        make -Cbuild_temp install/strip
    - name: Test
      run: |
        build_result/bin/myapplication
    - name: Pack
      run: |
        tar cfj ./${{ matrix.config.artifact }} --strip-components=1 build_result
    - name: Upload
      uses: actions/upload-artifact@v1
      with:
        path: ./${{ matrix.config.artifact }}
        name: ${{ matrix.config.artifact }}
