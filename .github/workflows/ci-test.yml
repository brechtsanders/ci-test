name: GitHub-CI for ci-test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        config:
          - {
              name: "Windows MinGW-w64 GCC 64-bit",
              os: windows-latest,
              shell: 'msys2 {0}',
              cmake_generator: "Ninja",
              arch: x86_64,
              cc: x86_64-w64-mingw32-gcc.exe,
              cxx: x86_64-w64-mingw32-g++.exe
            }
#          - {
#              name: "Ubuntu Linux",
#              os: ubuntu-latest,
#              shell: bash,
#              cmake_generator: "Unix Makefiles",
#              cc: gcc,
#              cxx: g++
##              cc: clang,
##              cxx: clang++
#            }
#          - {
#              name: "macOS",
#              os: macos-latest,
#              shell: bash,
#              cmake_generator: "Unix Makefiles",
#              cc: gcc,
#              cxx: g++
##              cc: clang,
##              cxx: clang++
#            }
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: ${{ matrix.config.shell }}
    env:
      CC: ${{ matrix.config.cc }}
      CXX: ${{ matrix.config.cxx }}

    steps:
    - if: matrix.config.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        update: false
        msystem: MINGW64
        install: >-
          git
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-ninja
    - uses: actions/checkout@v1
    - name: Configure (cmake)
      run: |
        cmake.exe -G"${{ matrix.config.cmake_generator }}" -DCMAKE_C_COMPILER=${{ matrix.config.cc }} -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }} -DCMAKE_INSTALL_PREFIX:PATH=../build_result -DBUILD_STATIC:BOOL=ON -DBUILD_SHARED:BOOL=ON -DBUILD_UTILS:BOOL=ON -DBUILD_DOCUMENTATION:BOOL=OFF -S. -Bbuild_temp
    - if: matrix.config.cmake_generator != 'Ninja'
      name: Build (make)
      run: |
        make -Cbuild_temp install/strip
    - if: matrix.config.cmake_generator == 'Ninja'
      name: Build (ninja)
      run: |
        ninja -Cbuild_temp install/strip
    - name: Test
      run: |
        LD_LIBRARY_PATH=$PWD/build_result/lib:$LD_LIBRARY_PATH DYLD_LIBRARY_PATH=$PWD/build_result/lib:$DYLD_LIBRARY_PATH build_result/bin/myapplication
